{"remainingRequest":"/Users/zhaoyifei/Desktop/web/tasks/GenerateTreeDirectory/node_modules/babel-loader/lib/index.js!/Users/zhaoyifei/Desktop/web/tasks/GenerateTreeDirectory/node_modules/ts-loader/index.js??ref--13-2!/Users/zhaoyifei/Desktop/web/tasks/GenerateTreeDirectory/src/ts/buildTree.ts","dependencies":[{"path":"/Users/zhaoyifei/Desktop/web/tasks/GenerateTreeDirectory/src/ts/buildTree.ts","mtime":1633664402357},{"path":"/Users/zhaoyifei/Desktop/web/tasks/GenerateTreeDirectory/node_modules/cache-loader/dist/cjs.js","mtime":1633610742189},{"path":"/Users/zhaoyifei/Desktop/web/tasks/GenerateTreeDirectory/node_modules/babel-loader/lib/index.js","mtime":1633610742507},{"path":"/Users/zhaoyifei/Desktop/web/tasks/GenerateTreeDirectory/node_modules/ts-loader/index.js","mtime":1633623448475}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucGFyc2UtaW50LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwpleHBvcnQgZnVuY3Rpb24gYnVpbGQoZGF0YSkgewogIHZhciByb290ID0gewogICAgbmFtZTogIuebruW9lSIsCiAgICBsZXZlbDogMCwKICAgIGZhdGhlcjoge30sCiAgICBjaGlsZHJlbjogW10KICB9OwogIHZhciBwcmV2ID0gcm9vdDsKCiAgZm9yICh2YXIgaSBpbiBkYXRhKSB7CiAgICB2YXIgbm9kZSA9IHsKICAgICAgbmFtZTogIiIsCiAgICAgIGxldmVsOiAwLAogICAgICBmYXRoZXI6IHt9LAogICAgICBjaGlsZHJlbjogW10KICAgIH07CgogICAgaWYgKGRhdGFbaV0ubm9kZU5hbWUpIHsKICAgICAgbm9kZS5uYW1lID0gZGF0YVtpXS5pbm5lckhUTUw7CiAgICAgIG5vZGUubGV2ZWwgPSBwYXJzZUludChkYXRhW2ldLm5vZGVOYW1lLnNsaWNlKDEpKTsKCiAgICAgIGlmIChub2RlLmxldmVsID4gcHJldi5sZXZlbCkgewogICAgICAgIHByZXYuY2hpbGRyZW4ucHVzaChub2RlKTsKICAgICAgICBub2RlLmZhdGhlciA9IHByZXY7CiAgICAgIH0gZWxzZSBpZiAobm9kZS5sZXZlbCA9PSBwcmV2LmxldmVsKSB7CiAgICAgICAgcHJldi5mYXRoZXIuY2hpbGRyZW4ucHVzaChub2RlKTsKICAgICAgICBub2RlLmZhdGhlciA9IHByZXYuZmF0aGVyOwogICAgICB9IGVsc2UgaWYgKG5vZGUubGV2ZWwgPCBwcmV2LmxldmVsKSB7CiAgICAgICAgd2hpbGUgKG5vZGUubGV2ZWwgPCBwcmV2LmxldmVsKSB7CiAgICAgICAgICBwcmV2ID0gcHJldi5mYXRoZXI7CiAgICAgICAgfQoKICAgICAgICBwcmV2LmZhdGhlci5jaGlsZHJlbi5wdXNoKG5vZGUpOwogICAgICAgIG5vZGUuZmF0aGVyID0gcHJldi5mYXRoZXI7CiAgICAgIH0KCiAgICAgIHByZXYgPSBub2RlOwogICAgfQogIH0KCiAgcmV0dXJuIHJvb3Q7Cn0="},{"version":3,"sources":["/Users/zhaoyifei/Desktop/web/tasks/GenerateTreeDirectory/src/ts/buildTree.ts"],"names":[],"mappings":";;AAAA,OAAM,SAAU,KAAV,CAAgB,IAAhB,EAAwC;AAO5C,MAAM,IAAI,GAAS;AACjB,IAAA,IAAI,EAAE,IADW;AAEjB,IAAA,KAAK,EAAE,CAFU;AAGjB,IAAA,MAAM,EAAE,EAHS;AAIjB,IAAA,QAAQ,EAAE;AAJO,GAAnB;AAOA,MAAI,IAAI,GAAG,IAAX;;AACA,OAAK,IAAI,CAAT,IAAc,IAAd,EAAoB;AAClB,QAAI,IAAI,GAAS;AACf,MAAA,IAAI,EAAE,EADS;AAEf,MAAA,KAAK,EAAE,CAFQ;AAGf,MAAA,MAAM,EAAE,EAHO;AAIf,MAAA,QAAQ,EAAE;AAJK,KAAjB;;AAMA,QAAI,IAAI,CAAC,CAAD,CAAJ,CAAQ,QAAZ,EAAsB;AACpB,MAAA,IAAI,CAAC,IAAL,GAAY,IAAI,CAAC,CAAD,CAAJ,CAAQ,SAApB;AACA,MAAA,IAAI,CAAC,KAAL,GAAa,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAJ,CAAQ,QAAR,CAAiB,KAAjB,CAAuB,CAAvB,CAAD,CAArB;;AACA,UAAI,IAAI,CAAC,KAAL,GAAa,IAAI,CAAC,KAAtB,EAA6B;AAC3B,QAAA,IAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,IAAnB;AACA,QAAA,IAAI,CAAC,MAAL,GAAc,IAAd;AACD,OAHD,MAGO,IAAI,IAAI,CAAC,KAAL,IAAc,IAAI,CAAC,KAAvB,EAA8B;AACnC,QAAA,IAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,IAArB,CAA0B,IAA1B;AACA,QAAA,IAAI,CAAC,MAAL,GAAc,IAAI,CAAC,MAAnB;AACD,OAHM,MAGA,IAAI,IAAI,CAAC,KAAL,GAAa,IAAI,CAAC,KAAtB,EAA6B;AAClC,eAAO,IAAI,CAAC,KAAL,GAAa,IAAI,CAAC,KAAzB,EAAgC;AAC9B,UAAA,IAAI,GAAG,IAAI,CAAC,MAAZ;AACD;;AACD,QAAA,IAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,IAArB,CAA0B,IAA1B;AACA,QAAA,IAAI,CAAC,MAAL,GAAc,IAAI,CAAC,MAAnB;AACD;;AACD,MAAA,IAAI,GAAG,IAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD","sourcesContent":["export function build(data: Array<HTMLElement>) {\n  type Node = {\n    name: String;\n    level: Number;\n    father: any;\n    children: Node[];\n  };\n  const root: Node = {\n    name: \"目录\",\n    level: 0,\n    father: {},\n    children: [],\n  };\n\n  let prev = root;\n  for (let i in data) {\n    var node: Node = {\n      name: \"\",\n      level: 0,\n      father: {},\n      children: [],\n    };\n    if (data[i].nodeName) {\n      node.name = data[i].innerHTML;\n      node.level = parseInt(data[i].nodeName.slice(1));\n      if (node.level > prev.level) {\n        prev.children.push(node);\n        node.father = prev;\n      } else if (node.level == prev.level) {\n        prev.father.children.push(node);\n        node.father = prev.father;\n      } else if (node.level < prev.level) {\n        while (node.level < prev.level) {\n          prev = prev.father;\n        }\n        prev.father.children.push(node);\n        node.father = prev.father;\n      }\n      prev = node;\n    }\n  }\n  return root;\n}\n"],"sourceRoot":""}]}